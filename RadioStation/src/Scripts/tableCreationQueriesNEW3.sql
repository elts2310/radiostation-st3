/*Δημιουργία πινάκων*/
CREATE TABLE MUSICGENRE (
    GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    GENRE_NAME VARCHAR(45),
    PRIMARY KEY (GENRE_ID)
);

CREATE TABLE ARTIST (
    ARTIST_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    FIRST_NAME VARCHAR(45),
    LAST_NAME VARCHAR(45),
    ARTISTIC_NAME VARCHAR(100) NOT NULL,
    SEX VARCHAR(45) NOT NULL,
    BIRTH_DAY DATE,
    BIRTH_PLACE VARCHAR(45),
    GENRE_ID INTEGER NOT NULL,
    PRIMARY KEY (ARTIST_ID)
);

CREATE TABLE MUSICGROUP (
    MUSICGROUP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    MUSICGROUP_NAME VARCHAR(100) NOT NULL,
    FORMATION_DATE DATE,
    PRIMARY KEY (MUSICGROUP_ID)
);

CREATE TABLE MUSICPRODUCTIONCOMPANY (
    MPC_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    MPC_NAME VARCHAR(100) NOT NULL,
    ADDRESS VARCHAR(100),
    TELEPHONE VARCHAR(15),
    PRIMARY KEY (MPC_ID)
);

CREATE TABLE ALBUM (
    ALBUM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    TITLE VARCHAR(255) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    ALBUM_TYPE VARCHAR(45) NOT NULL,
    DISC_NUMBER INTEGER NOT NULL,
    MPC_ID INTEGER NOT NULL,
    MUSICGROUP_ID INTEGER,
    ARTIST_ID INTEGER,
    PRIMARY KEY (ALBUM_ID)
);

CREATE TABLE PLAYLIST (
    PLAYLIST_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    PL_NAME VARCHAR(100) NOT NULL,
    PL_DESCRIPTION VARCHAR(255),
    PL_CREATION_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY (PLAYLIST_ID)
);

CREATE TABLE SONG (
    SONG_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    TITLE VARCHAR(100) NOT NULL,
    DURATION INTEGER NOT NULL,
    TRACK_NR INTEGER NOT NULL,
    ALBUM_ID INTEGER NOT NULL,
    PRIMARY KEY (SONG_ID)
);


/*Προσθήκη πεδίων (συγκεκριμένα foreign keys)*/
/*Η προσθήκη πεδίων στον εκάστοτε πίνακα μπορεί να γίνει με μία μόνο εντολή ALTER TABLE & ADD ανά πίνακα
(multiple columns), αλλά για κάποιο περίεργο λόγο το NetBeans δεν δέχεται την πολλαπλή προσθήκη πεδίων. 
Γι' αυτό παρακάτω γίνεται προσθήκη ενός πεδίου (και συγκεκριμένα η σύνδεση των foreign keys) κάθε φορά*/

ALTER TABLE ARTIST
    ADD CONSTRAINT MUSICGENRE_FK FOREIGN KEY (GENRE_ID)
            REFERENCES MUSICGENRE(GENRE_ID);

ALTER TABLE ALBUM
    ADD CONSTRAINT MUSICPRODUCTIONCOMPANY_FK FOREIGN KEY (MPC_ID)
            REFERENCES MUSICPRODUCTIONCOMPANY(MPC_ID);

ALTER TABLE ALBUM
    ADD CONSTRAINT ALBUM_ARTIST_FK FOREIGN KEY (ARTIST_ID)
            REFERENCES ARTIST(ARTIST_ID);

ALTER TABLE ALBUM
    ADD CONSTRAINT ALBUM_MUSICGROUP_FK FOREIGN KEY (MUSICGROUP_ID)
            REFERENCES MUSICGROUP(MUSICGROUP_ID);

ALTER TABLE SONG
    ADD CONSTRAINT SONG_ALBUM_FK FOREIGN KEY (ALBUM_ID)
            REFERENCES ALBUM(ALBUM_ID);


/*Δημιουργία πινάκων σύνδεσης σχέσεων Many-to-Many*/

CREATE TABLE MUSICGROUP_ARTIST (
    ARTIST_ID INTEGER NOT NULL,
    MUSICGROUP_ID INTEGER NOT NULL,
    PRIMARY KEY (ARTIST_ID, MUSICGROUP_ID),
    CONSTRAINT ARTIST_FK FOREIGN KEY (ARTIST_ID)
    	REFERENCES ARTIST(ARTIST_ID),
    CONSTRAINT MUSICGROUP_FK FOREIGN KEY (MUSICGROUP_ID)
    	REFERENCES MUSICGROUP(MUSICGROUP_ID)
);

CREATE TABLE PLAYLIST_SONG (
    PLAYLIST_ID INTEGER NOT NULL,
    SONG_ID INTEGER NOT NULL,
    PRIMARY KEY (PLAYLIST_ID, SONG_ID),
    CONSTRAINT PLAYLIST_FK FOREIGN KEY (PLAYLIST_ID)
    	REFERENCES PLAYLIST(PLAYLIST_ID),
    CONSTRAINT SONG_FK FOREIGN KEY (SONG_ID)
    	REFERENCES SONG(SONG_ID)
);